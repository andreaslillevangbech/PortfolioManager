INFO:root:select coin online from 2020-05-31 18:55 to 2020-06-30 18:55
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'SNX', 'TRX', 'STR', 'ATOM']
INFO:root:fill XMR data from 2020-03-31 17:00 to 2020-05-31 16:54
INFO:root:fill LTC data from 2020-03-31 17:00 to 2020-05-31 16:54
INFO:root:fill BCHABC data from 2020-03-31 17:00 to 2020-05-31 16:54
INFO:root:fill SNX data from 2020-03-31 17:00 to 2020-05-31 16:54
INFO:root:fill TRX data from 2020-03-31 17:00 to 2020-05-31 16:54
INFO:root:fill STR data from 2020-03-31 17:00 to 2020-05-31 16:54
INFO:root:fill ATOM data from 2020-03-31 17:00 to 2020-05-31 16:54
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 4322, of test examples is 381
DEBUG:root:the training set is from 50 to 4371
DEBUG:root:the test set is from 4372 to 4752
INFO:root:select coin online from 2020-05-31 18:55 to 2020-06-30 18:55
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'SNX', 'TRX', 'STR', 'ATOM']
INFO:root:fill SNX data from 2020-03-31 17:00 to 2020-04-02 13:49
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 4322, of test examples is 381
DEBUG:root:the training set is from 50 to 4371
DEBUG:root:the test set is from 4372 to 4752
INFO:root:upper bound in test is 17.98393139483815
WARNING:tensorflow:Layer cnn is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

INFO:root:average time for data accessing is 2.7993917465209962e-05
INFO:root:average time for training is 0.0001702251434326172
INFO:root:select coin online from 2020-05-31 18:55 to 2020-06-30 18:55
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'SNX', 'TRX', 'STR', 'ATOM']
INFO:root:fill SNX data from 2020-03-31 17:00 to 2020-04-02 13:49
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 4322, of test examples is 381
DEBUG:root:the training set is from 50 to 4371
DEBUG:root:the test set is from 4372 to 4752
INFO:root:upper bound in test is 17.98393139483815
WARNING:tensorflow:Layer cnn is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

INFO:root:average time for data accessing is 3.086709976196289e-05
INFO:root:average time for training is 0.00015820002555847168
INFO:root:select coin online from 2020-05-31 18:55 to 2020-06-30 18:55
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'SNX', 'TRX', 'STR', 'ATOM']
INFO:root:fill SNX data from 2020-03-31 17:00 to 2020-04-02 13:49
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 4322, of test examples is 381
DEBUG:root:the training set is from 50 to 4371
DEBUG:root:the test set is from 4372 to 4752
INFO:root:upper bound in test is 17.98393139483815
WARNING:tensorflow:Layer cnn is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

INFO:root:average time for data accessing is 2.223682403564453e-05
INFO:root:average time for training is 0.00018490910530090333
INFO:root:select coin online from 2020-05-31 18:55 to 2020-06-30 18:55
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'SNX', 'TRX', 'STR', 'ATOM']
INFO:root:fill SNX data from 2020-03-31 17:00 to 2020-04-02 13:49
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 4322, of test examples is 381
DEBUG:root:the training set is from 50 to 4371
DEBUG:root:the test set is from 4372 to 4752
INFO:root:upper bound in test is 17.98393139483815
WARNING:tensorflow:Layer cnn is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

INFO:root:average time for data accessing is 2.2673845291137695e-05
INFO:root:average time for training is 0.00018407511711120606
INFO:root:select coin online from 2020-05-31 18:55 to 2020-06-30 18:55
INFO:root:select coin online from 2020-05-31 18:55 to 2020-06-30 18:55
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'SNX', 'TRX', 'STR', 'ATOM']
INFO:root:fill SNX data from 2020-03-31 17:00 to 2020-04-02 13:49
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 4322, of test examples is 381
DEBUG:root:the training set is from 50 to 4371
DEBUG:root:the test set is from 4372 to 4752
INFO:root:upper bound in test is 17.98393139483815
WARNING:tensorflow:Layer cnn is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

INFO:root:average time for data accessing is 2.2347927093505858e-05
INFO:root:average time for training is 0.00018228697776794434
INFO:root:get better model at 0 steps, whose test portfolio value is tf.Tensor(1.0926396, shape=(), dtype=float32)
INFO:root:average time for data accessing is 0.021627750158309936
INFO:root:average time for training is 0.013535302877426148
INFO:root:average time for data accessing is 0.021327171802520754
INFO:root:average time for training is 0.013319060802459717
INFO:root:average time for data accessing is 0.02250044584274292
INFO:root:average time for training is 0.014217237710952759
INFO:root:average time for data accessing is 0.023025681257247924
INFO:root:average time for training is 0.014590938329696655
WARNING:tensorflow:Layer cnn_1 is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

WARNING:root:the portfolio value train No.0 is tf.Tensor(1.0926396, shape=(), dtype=float32) log_mean is tf.Tensor(0.00026766246, shape=(), dtype=float32), the training time is 194 seconds
INFO:root:select coin online from 2020-05-24 12:12 to 2020-06-23 12:12
INFO:root:Successfully got coinlist
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'TRX', 'STR', 'ETC', 'DASH']
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 8341, of test examples is 730
DEBUG:root:the training set is from 50 to 8390
DEBUG:root:the test set is from 8391 to 9120
INFO:root:upper bound in test is 28.483139095111696
WARNING:tensorflow:Layer cnn is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

INFO:root:average time for data accessing is 4.9487829208374025e-05
INFO:root:average time for training is 0.0001682448387145996
INFO:root:==============================
INFO:root:step 0
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-8.107234e-06, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0535557, shape=(), dtype=float32)
log_mean is tf.Tensor(7.6722565e-05, shape=(), dtype=float32)
loss_value is -0.000077
log mean without commission fee is 0.000081

INFO:root:==============================

INFO:root:get better model at 0 steps, whose test portfolio value is tf.Tensor(1.0699619, shape=(), dtype=float32)
INFO:root:average time for data accessing is 0.04594960618019104
INFO:root:average time for training is 0.022286397218704224
INFO:root:==============================
INFO:root:step 1000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.1954919e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0507375, shape=(), dtype=float32)
log_mean is tf.Tensor(7.2781884e-05, shape=(), dtype=float32)
loss_value is -0.000073
log mean without commission fee is 0.000074

INFO:root:==============================

INFO:root:get better model at 1000 steps, whose test portfolio value is tf.Tensor(1.1048565, shape=(), dtype=float32)
INFO:root:select coin online from 2020-05-24 12:12 to 2020-06-23 12:12
INFO:root:Successfully got coinlist
DEBUG:root:Selected coins are: ['reversed_USDT', 'ETH', 'XRP', 'XMR', 'LTC', 'BCHABC', 'BCHSV', 'TRX', 'STR', 'ETC', 'DASH']
INFO:root:feature type list is ['close', 'high', 'low']
DEBUG:root:buffer_bias is 0.000050
INFO:root:the number of training examples is 8341, of test examples is 730
DEBUG:root:the training set is from 50 to 8390
DEBUG:root:the test set is from 8391 to 9120
INFO:root:upper bound in test is 28.483139095111696
WARNING:tensorflow:Layer cnn is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

INFO:root:average time for data accessing is 0.00014874982833862306
INFO:root:average time for training is 0.00017394495010375976
INFO:root:==============================
INFO:root:step 0
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-9.260424e-06, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0553373, shape=(), dtype=float32)
log_mean is tf.Tensor(7.9207995e-05, shape=(), dtype=float32)
loss_value is -0.000079
log mean without commission fee is 0.000084

INFO:root:==============================

INFO:root:get better model at 0 steps, whose test portfolio value is tf.Tensor(1.0802996, shape=(), dtype=float32)
INFO:root:average time for data accessing is 0.05114977264404297
INFO:root:average time for training is 0.02409876275062561
INFO:root:==============================
INFO:root:step 1000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.1559058e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0524062, shape=(), dtype=float32)
log_mean is tf.Tensor(7.5117874e-05, shape=(), dtype=float32)
loss_value is -0.000075
log mean without commission fee is 0.000076

INFO:root:==============================

INFO:root:average time for data accessing is 0.045915969133377074
INFO:root:average time for training is 0.02192071270942688
INFO:root:==============================
INFO:root:step 2000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.050151e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0549799, shape=(), dtype=float32)
log_mean is tf.Tensor(7.870857e-05, shape=(), dtype=float32)
loss_value is -0.000079
log mean without commission fee is 0.000082

INFO:root:==============================

INFO:root:average time for data accessing is 0.04516749024391174
INFO:root:average time for training is 0.021491680383682252
INFO:root:==============================
INFO:root:step 3000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.0397643e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0557489, shape=(), dtype=float32)
log_mean is tf.Tensor(7.977992e-05, shape=(), dtype=float32)
loss_value is -0.000080
log mean without commission fee is 0.000083

INFO:root:==============================

INFO:root:get better model at 3000 steps, whose test portfolio value is tf.Tensor(1.0905993, shape=(), dtype=float32)
INFO:root:average time for data accessing is 0.047089685678482054
INFO:root:average time for training is 0.023031322956085204
INFO:root:==============================
INFO:root:step 4000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.2079711e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0516596, shape=(), dtype=float32)
log_mean is tf.Tensor(7.4071875e-05, shape=(), dtype=float32)
loss_value is -0.000074
log mean without commission fee is 0.000075

INFO:root:==============================

INFO:root:average time for data accessing is 0.05932505440711975
INFO:root:average time for training is 0.02691345000267029
INFO:root:==============================
INFO:root:step 5000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.1606882e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0549963, shape=(), dtype=float32)
log_mean is tf.Tensor(7.8730365e-05, shape=(), dtype=float32)
loss_value is -0.000079
log mean without commission fee is 0.000081

INFO:root:==============================

INFO:root:average time for data accessing is 0.06102734088897705
INFO:root:average time for training is 0.02732154393196106
INFO:root:==============================
INFO:root:step 6000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.2008923e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0558614, shape=(), dtype=float32)
log_mean is tf.Tensor(7.993531e-05, shape=(), dtype=float32)
loss_value is -0.000080
log mean without commission fee is 0.000082

INFO:root:==============================

INFO:root:get better model at 6000 steps, whose test portfolio value is tf.Tensor(1.1053483, shape=(), dtype=float32)
INFO:root:average time for data accessing is 0.04699450254440308
INFO:root:average time for training is 0.024231041431427004
INFO:root:==============================
INFO:root:step 7000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.3310459e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0556105, shape=(), dtype=float32)
log_mean is tf.Tensor(7.958828e-05, shape=(), dtype=float32)
loss_value is -0.000080
log mean without commission fee is 0.000081

INFO:root:==============================

INFO:root:average time for data accessing is 0.04631072878837585
INFO:root:average time for training is 0.023009419679641725
INFO:root:==============================
INFO:root:step 8000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.3865805e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0564166, shape=(), dtype=float32)
log_mean is tf.Tensor(8.0709666e-05, shape=(), dtype=float32)
loss_value is -0.000081
log mean without commission fee is 0.000083

INFO:root:==============================

INFO:root:get better model at 8000 steps, whose test portfolio value is tf.Tensor(1.1226078, shape=(), dtype=float32)
INFO:root:average time for data accessing is 0.05306472587585449
INFO:root:average time for training is 0.025222421169281004
INFO:root:==============================
INFO:root:step 9000
INFO:root:------------------------------
INFO:root:training loss is tf.Tensor(-1.4198526e-05, shape=(), dtype=float32)

INFO:root:the portfolio value on test set is tf.Tensor(1.0551375, shape=(), dtype=float32)
log_mean is tf.Tensor(7.892694e-05, shape=(), dtype=float32)
loss_value is -0.000079
log mean without commission fee is 0.000081

INFO:root:==============================

WARNING:tensorflow:Layer cnn_1 is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because its dtype defaults to floatx.

If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.

WARNING:root:the portfolio value train No.0 is tf.Tensor(1.0564166, shape=(), dtype=float32) log_mean is tf.Tensor(8.0709666e-05, shape=(), dtype=float32), the training time is 742 seconds
